name: UiPath CI/CD

on:
  push:
    branches: [ "main" ]  # 원하는 브랜치명

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
      # 1) 코드를 체크아웃
      - name: Check out repository
        uses: actions/checkout@v2

      # 2) UiPath CLI 설치
      - name: Install UiPath CLI
        run: dotnet tool install --global UiPath.CLI --version 1.*

      # 3) UiPath CLI가 PATH에 포함되도록 설정
      - name: Add UiPath CLI to PATH
        run: echo "${{ runner.tool_cache }}/dotnet/tools" >> $GITHUB_PATH

      # 4) Orchestrator에 인증 (Modern Folder 기준 - External App 방식 예시)
      - name: Authenticate Orchestrator
        run: |
          uipath login \
            --organization-url https://cloud.uipath.com \
            --tenant-name ${{ secrets.UIPATH_TENANT_LOGICAL_NAME }} \
            --client-id ${{ secrets.UIPATH_CLIENT_ID }} \
            --user-key ${{ secrets.UIPATH_USER_KEY }} \
            --account-name ${{ secrets.UIPATH_ACCOUNT_LOGICAL_NAME }}

      # 5) 패키지 Publish
      #   (프로젝트 경로를 지정하지 않으면 현재 디렉터리의 project.json을 기준으로 패키지가 생성됩니다.)
      - name: Publish package to Orchestrator
        run: |
          uipath pack --project-path . --output . --version 1.0.$(date +'%Y%m%d%H%M')
          uipath push --orchestrator --feed MyPackages --publish-single

          # 참조:
          #   - pack: 프로젝트 -> NuGet 패키지(.nupkg) 생성
          #   - push: 생성된 패키지를 Orchestrator의 MyPackages 피드에 업로드
          #   - feed 이름은 Orchestrator 설정에 따라 다를 수 있음

      # 6) 프로세스 업데이트 (선택적)
      #   - 패키지를 업로드한 뒤 특정 모던 폴더에 프로세스를 업데이트/배포할 수도 있음
      - name: Update process in Orchestrator (Optional)
        run: |
          uipath process update \
            --process-name "MyProcessName" \
            --package-name "MyProject" \
            --package-version "1.0.$(date +'%Y%m%d%H%M')" \
            --folder-name "Default"
